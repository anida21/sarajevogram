{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/about-us/about-us.component.ts","./src/app/about-us/about-us.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/pages/login-page/login-page.component.ts","./src/app/pages/login-page/login-page.component.html","./src/app/pages/profile-page/profile-page.component.ts","./src/app/pages/profile-page/profile-page.component.html","./src/app/pages/signup-page/signup-page.component.ts","./src/app/pages/signup-page/signup-page.component.html","./src/app/posts/create/create.component.ts","./src/app/posts/create/create.component.html","./src/app/posts/create/mime-type.validator.ts","./src/app/posts/edit/edit.component.ts","./src/app/posts/edit/edit.component.html","./src/app/posts/post-list/post-list.component.ts","./src/app/posts/post-list/post-list.component.html","./src/app/posts/post.service.ts","./src/app/web-req-interceptor.service.ts","./src/app/web-request.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\n \r\n@Component({\r\n  selector: 'app-about-us',\r\n  templateUrl: './about-us.component.html',\r\n  styleUrls: ['./about-us.component.css']\r\n})\r\nexport class AboutUsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  \r\n\r\n  <mat-card class=\"example-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar class=\"example-header-image-anida\"></div>\r\n      <mat-card-title>Anida Mujezin</mat-card-title>\r\n      <mat-card-subtitle>Full Stack Developer</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <img mat-card-image src=\"assets/images/Anida_Mujezin.png\" alt=\"Anida Mujezin\">\r\n    \r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar class=\"example-header-image-dzenana\"></div>\r\n      <mat-card-title>Nejra Sivić</mat-card-title>\r\n      <mat-card-subtitle>Frontend developer</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <img mat-card-image src=\"assets/images/Nejra_Sivic.png\" alt=\"Dženana Šabović\">\r\n    \r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar class=\"example-header-image-arslan\"></div>\r\n      <mat-card-title>Emir Grbo</mat-card-title>\r\n      <mat-card-subtitle>Backend Developer</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <img mat-card-image src=\"assets/images/Emir_Grbo.png\" alt=\"Arslan Turkušić\">\r\n    \r\n  </mat-card>\r\n\r\n  \r\n</div>\r\n<br>\r\n<hr>\r\n<div class=\"created\">\r\n <p>Powered by  <a href=\"https://fsk.unsa.ba/\">&nbsp;FSK 2021.&nbsp;</a></p>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PostListComponent } from './posts/post-list/post-list.component';\r\nimport { CreateComponent } from './posts/create/create.component';\r\nimport { EditComponent } from './posts/edit/edit.component';\r\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\r\nimport { SignupPageComponent } from './pages/signup-page/signup-page.component';\r\nimport { AboutUsComponent } from './about-us/about-us.component';\r\nimport { ProfilePageComponent } from './pages/profile-page/profile-page.component';\r\nimport { AuthService } from './auth.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PostListComponent,\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: CreateComponent,\r\n  },\r\n  {\r\n    path: 'profile',\r\n    component: ProfilePageComponent,\r\n  },\r\n  {\r\n    path: 'edit/:postId',\r\n    component: EditComponent,\r\n  },\r\n  {\r\n    path: 'about-us',\r\n    component: AboutUsComponent,\r\n  },\r\n\r\n  { path: 'login', component: LoginPageComponent },\r\n  { path: 'signup', component: SignupPageComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\nimport { Post } from './posts/post.model';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  \r\n}\r\n","<app-main></app-main>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CreateComponent } from './posts/create/create.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MainComponent } from './main/main.component';\r\nimport { PostListComponent } from './posts/post-list/post-list.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { EditComponent } from './posts/edit/edit.component';\r\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\r\nimport { SignupPageComponent } from './pages/signup-page/signup-page.component';\r\nimport { AboutUsComponent } from './about-us/about-us.component';\r\nimport { ProfilePageComponent } from './pages/profile-page/profile-page.component';\r\nimport { WebReqInterceptorService } from './web-req-interceptor.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CreateComponent,\r\n    MainComponent,\r\n    PostListComponent,\r\n    EditComponent,\r\n    LoginPageComponent,\r\n    SignupPageComponent,\r\n    AboutUsComponent,\r\n    ProfilePageComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    HttpClientModule,\r\n    MatIconModule,\r\n    MatBadgeModule,\r\n   \r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: WebReqInterceptorService,\r\n      multi: true,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { WebRequestService } from './web-request.service';\r\nimport { Router } from '@angular/router';\r\nimport { shareReplay, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private webService: WebRequestService,\r\n    private router: Router,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  login(email: string, password: string) {\r\n    return this.webService.login(email, password).pipe(\r\n      shareReplay(),\r\n      tap((res: HttpResponse<any>) => {\r\n        // the auth tokens will be in the header of this response\r\n        this.setSession(\r\n          res.body._id,\r\n          res.body.username,\r\n          res.headers.get('x-access-token'),\r\n          res.headers.get('x-refresh-token')\r\n        );\r\n        console.log('LOGGED IN!');\r\n      })\r\n    );\r\n  }\r\n\r\n  signup(email: string, password: string, username: string) {\r\n    return this.webService.signup(email, password, username).pipe(\r\n      shareReplay(),\r\n      tap((res: HttpResponse<any>) => {\r\n        console.log(res);\r\n        // the auth tokens will be in the header of this response\r\n        this.setSession(\r\n          res.body._id,\r\n          res.body.username,\r\n          res.headers.get('x-access-token'),\r\n          res.headers.get('x-refresh-token')\r\n        );\r\n        console.log('Successfully signed up and now logged in!');\r\n      })\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    this.removeSession();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  getAccessToken() {\r\n    return localStorage.getItem('x-access-token');\r\n  }\r\n\r\n  getRefreshToken() {\r\n    return localStorage.getItem('x-refresh-token');\r\n  }\r\n\r\n  getUserId() {\r\n    return localStorage.getItem('user-id');\r\n  }\r\n\r\n  getUsername() {\r\n    return localStorage.getItem('username');\r\n  }\r\n\r\n  setAccessToken(accessToken: string) {\r\n    localStorage.setItem('x-access-token', accessToken);\r\n  }\r\n\r\n  private setSession(\r\n    userId: string,\r\n    username: string,\r\n    accessToken: string,\r\n    refreshToken: string\r\n  ) {\r\n    localStorage.setItem('user-id', userId);\r\n    localStorage.setItem('username', username);\r\n    localStorage.setItem('x-access-token', accessToken);\r\n    localStorage.setItem('x-refresh-token', refreshToken);\r\n  }\r\n\r\n  private removeSession() {\r\n    localStorage.removeItem('user-id');\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('x-access-token');\r\n    localStorage.removeItem('x-refresh-token');\r\n  }\r\n\r\n  getNewAccessToken() {\r\n    return this.http\r\n      .get(`${this.webService.ROOT_URL}/users/me/access-token`, {\r\n        headers: {\r\n          'x-refresh-token': this.getRefreshToken(),\r\n          _id: this.getUserId(),\r\n        },\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        tap((res: HttpResponse<any>) => {\r\n          this.setAccessToken(res.headers.get('x-access-token'));\r\n        })\r\n      );\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return this.getUserId() != null;\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css'],\r\n})\r\nexport class MainComponent implements OnInit {\r\n  isLoggedIn: boolean;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    this.router.events.subscribe((ev) => {\r\n      if (ev instanceof NavigationEnd) {\r\n        this.isLoggedIn = this.checkIfLoggedIn();\r\n        console.log(this.isLoggedIn);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = this.checkIfLoggedIn();\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n    this.isLoggedIn = this.checkIfLoggedIn();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  checkIfLoggedIn() {\r\n    return this.authService.isLoggedIn();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <mat-toolbar color=\"warn\" *ngIf=\"isLoggedIn\">\r\n    <span class=\"logoo\">\r\n      <a routerLink=\"/\" ><mat-icon id=\"neka\">camera</mat-icon> Sarajevogram</a>\r\n    </span>\r\n    <span class=\"spacer\"></span>\r\n    <ul>\r\n      <li>\r\n        <a routerLink=\"/\">Home</a>\r\n      </li>\r\n    </ul>\r\n    <ul>\r\n      <li>\r\n        <a routerLink=\"/profile\">Profile</a>\r\n      </li>\r\n    </ul>\r\n    <ul>\r\n      <li>\r\n        <a routerLink=\"/about-us\">About Us</a>\r\n      </li>\r\n    </ul>\r\n    <ul id=\"logout_icon\">\r\n      <li>\r\n        <button\r\n          mat-mini-fab\r\n          color=\"warn\"\r\n          >\r\n          <a class=\"pointer\" (click)=\"onLogout()\"><mat-icon>logout</mat-icon></a>\r\n        </button> \r\n      </li>\r\n    </ul>\r\n    <ul id=\"add_photo\">\r\n      <button\r\n            mat-mini-fab\r\n            color=\"warn\"\r\n            routerLink=\"/create\"\r\n          >\r\n        <mat-icon>add_a_photo</mat-icon>\r\n      </button>\r\n    </ul>\r\n  </mat-toolbar>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css'],\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  form: FormGroup;\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    document.body.classList.add('background');\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    document.body.className = \"\";\r\n  }\r\n\r\n  onLoginButtonClicked(email: string, password: string) {\r\n    console.log(email, password);\r\n    this.authService\r\n      .login(email, password)\r\n      .subscribe((res: HttpResponse<any>) => {\r\n        if (res.status === 200) {\r\n          // we have logged in successfully\r\n          this.router.navigate(['/']);\r\n        }\r\n        console.log(res);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"centered-content\">\r\n  <mat-card-content>\r\n    <img src=\"assets/images/logo1.png\" alt=\"Logo Photo Board\">\r\n    <h2>Log In</h2>\r\n    <mat-form-field class=\"full-width-input\">\r\n      <input\r\n        #email\r\n        matInput\r\n        placeholder=\"Email\"\r\n        required\r\n      />\r\n      <mat-error>Please provide a valid email address </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"full-width-input\">\r\n      <input\r\n        #password\r\n        matInput\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        required\r\n      />\r\n      <mat-error> Please provide a valid password</mat-error>\r\n    </mat-form-field>\r\n    <button\r\n      mat-raised-button\r\n      color=\"warn\"\r\n      (click)=\"onLoginButtonClicked(email.value, password.value)\"\r\n    >\r\n      Login\r\n    </button>\r\n    <br>\r\n    <br>\r\n    <p>Don't have an account? <a id=\"signup\" routerLink=\"/signup\">Signup</a> now!</p>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Post } from '../../posts/post.model';\r\nimport { PostsService } from '../../posts/post.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile-page',\r\n  templateUrl: './profile-page.component.html',\r\n  styleUrls: ['./profile-page.component.css'],\r\n})\r\nexport class ProfilePageComponent implements OnInit {\r\n  isLoggedIn = this.authService.isLoggedIn();\r\n  isLoading = false;\r\n  posts: Post[] = [];\r\n  username = this.authService.getUsername();\r\n  public userId = this.authService.getUserId();\r\n  private postsSub: Subscription;\r\n\r\n  constructor(\r\n    private postsService: PostsService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading = true;\r\n    this.postsService.getPostsFromUser(this.authService.getUserId());\r\n    this.postsSub = this.postsService\r\n      .getPostUpdateListener()\r\n      .subscribe((posts: Post[]) => {\r\n        this.posts = posts;\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  onLike(postId, userId) {\r\n    this.postsService.onLike(postId, userId, this.callbackF, this);\r\n  }\r\n\r\n  callbackF(responseData: any, ovo) {\r\n    for (let i = 0; i < ovo.posts.length; i++) {\r\n      if (ovo.posts[i].id === responseData.postId) {\r\n        if (ovo.posts[i].likesCount < responseData.newLikeCount) {\r\n          ovo.posts[i].liked.push(ovo.userId);\r\n        } else {\r\n          const index = ovo.posts[i].liked.indexOf(ovo.userId);\r\n          if (index > -1) {\r\n            ovo.posts[i].liked.splice(index, 1);\r\n          }\r\n        }\r\n        ovo.posts[i].likesCount = responseData.newLikeCount;\r\n      }\r\n    }\r\n    console.log(ovo.posts);\r\n  }\r\n\r\n  onDelete(postId: string) {\r\n    this.postsService.deletePost(postId);\r\n  }\r\n\r\n  goToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","<div *ngIf=\"!isLoggedIn ? goToLogin() : false\"></div>\r\n<mat-card-header id=\"cent\">\r\n      <div mat-card-avatar id=\"bigger_icon\" class=\"example-header-image\"></div>\r\n\r\n      <mat-card-title id=\"bigger_text\">{{ username }}</mat-card-title>\r\n    </mat-card-header><div class=\"info\">\r\n  <p *ngIf=\"posts.length <= 0\">Please add some images</p>\r\n</div>\r\n<div class=\"container\">\r\n  <mat-card class=\"example-card\" *ngFor=\"let post of posts\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar class=\"example-header-image\"></div>\r\n\r\n      <mat-card-title>{{ username }}</mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <br />\r\n\r\n    <div class=\"post-image\">\r\n      <img mat-card-image [src]=\"post.imagePath\" [alt]=\"username\" />\r\n    </div>\r\n    <mat-card-content>\r\n      {{ post.content }}\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <div class=\"example-button-container\">\r\n        <button\r\n          [matBadge]=\"post.likesCount\"\r\n          matBadgePosition=\"before\"\r\n          matBadgeColor=\"primary\"\r\n          mat-fab\r\n          [color]=\"post.liked.includes(userId) ? 'accent' : 'disabled'\"\r\n          #tag\r\n          (click)=\"onLike(post.id, userId)\"\r\n        >\r\n          <mat-icon>favorite</mat-icon>\r\n        </button>\r\n        <button\r\n          mat-fab\r\n          color=\"disabled\"\r\n          aria-label=\"Example icon button with a home icon\"\r\n          [routerLink]=\"['/edit', post.id]\"\r\n        >\r\n          <mat-icon>create</mat-icon>\r\n        </button>\r\n        <button\r\n          mat-fab\r\n          color=\"disabled\"\r\n          aria-label=\"Example icon button with a delete icon \"\r\n          (click)=\"onDelete(post.id)\"\r\n        >\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signup-page',\r\n  templateUrl: './signup-page.component.html',\r\n  styleUrls: ['./signup-page.component.css'],\r\n})\r\nexport class SignupPageComponent implements OnInit {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    document.body.classList.add('background');\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    document.body.className = '';\r\n  }\r\n\r\n  onSignupButtonClicked(email: string, password: string, username: string) {\r\n    this.authService\r\n      .signup(email, password, username)\r\n      .subscribe((res: HttpResponse<any>) => {\r\n        console.log(res);\r\n        this.router.navigate(['/']);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"centered-content\">\r\n  <mat-card-content>\r\n    <img src=\"assets/images/logo1.png\" alt=\"Logo Photo Board\" />\r\n    <h2>Sign up</h2>\r\n    <mat-form-field class=\"full-width-input\">\r\n      <input\r\n        #email\r\n        matInput\r\n        placeholder=\"Email\"\r\n        formControlName=\"email\"\r\n        required\r\n      />\r\n      <mat-error>Please provide a valid email address </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"full-width-input\">\r\n      <input\r\n        #username\r\n        matInput\r\n        placeholder=\"Username\"\r\n        formControlName=\"username\"\r\n        required\r\n      />\r\n      <mat-error>Please provide a valid username </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"full-width-input\">\r\n      <input\r\n        #password\r\n        matInput\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        formControlName=\"password\"\r\n        required\r\n      />\r\n      <mat-error> Please provide a valid password</mat-error>\r\n    </mat-form-field>\r\n    <button\r\n      mat-raised-button\r\n      color=\"warn\"\r\n      (click)=\"\r\n        onSignupButtonClicked(email.value, password.value, username.value)\r\n      \"\r\n    >\r\n      Signup\r\n    </button>\r\n    <br />\r\n    <br />\r\n    <p>\r\n      Already got an account?<a id=\"login\" routerLink=\"/login\"> Login</a> now!\r\n    </p>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { Post } from '../post.model';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { PostsService } from '../post.service';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\n\r\nimport { mimeType } from './mime-type.validator';\r\nimport { AuthService } from 'src/app/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.css'],\r\n})\r\nexport class CreateComponent implements OnInit {\r\n  constructor(\r\n    public postsService: PostsService,\r\n    public route: ActivatedRoute,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n  private mode = 'create';\r\n  private postId: string;\r\n  imagePreview: string;\r\n  isLoading = false;\r\n  form: FormGroup;\r\n  post: Post;\r\n  isLoggedIn = this.authService.isLoggedIn();\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      content: new FormControl(null, { validators: [Validators.required] }),\r\n      image: new FormControl(null, {\r\n        validators: [Validators.required],\r\n        asyncValidators: [mimeType],\r\n      }),\r\n    });\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      if (paramMap.has('postId')) {\r\n        this.mode = 'edit';\r\n        this.postId = paramMap.get('postId');\r\n        this.isLoading = true;\r\n        this.postsService.getPost(this.postId).subscribe((postData) => {\r\n          this.isLoading = false;\r\n          this.post = {\r\n            id: postData._id,\r\n            userId: postData.userId,\r\n            username : postData.username,\r\n            content: postData.content,\r\n            likesCount: postData.likesCount,\r\n            liked: postData.liked,\r\n            comments: postData.comments,\r\n            imagePath: null,\r\n          };\r\n          this.form.setValue({\r\n            content: this.post.content,\r\n          });\r\n        });\r\n      } else {\r\n        this.mode = 'create';\r\n        this.postId = null;\r\n      }\r\n    });\r\n  }\r\n  enteredContent = '';\r\n\r\n  onSavePost() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    if (this.mode === 'create') {\r\n      this.postsService.addPost(this.form.value.content, this.form.value.image);\r\n    } else {\r\n      this.postsService.updatePost(this.postId, this.form.value.content);\r\n    }\r\n    this.form.reset();\r\n  }\r\n\r\n  onImagePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({ image: file });\r\n    this.form.get('image').updateValueAndValidity();\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imagePreview = reader.result.toString();\r\n    };\r\n    console.log(file);\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  goToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","<div *ngIf=\"!isLoggedIn ? goToLogin() : false\"></div>\r\n<mat-card>\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n  <form [formGroup]=\"form\" (submit)=\"onSavePost()\" *ngIf=\"!isLoading\">\r\n    \r\n\r\n    <div>\r\n      <div class=\"example-button-container\">\r\n        <P>ADD IMAGE</P>\r\n        <button\r\n          mat-mini-fab\r\n          color=\"accent\"\r\n          routerLinkActive=\"mat-accent\"\r\n          aria-label=\"Example icon button with a plus one icon\"\r\n          (click)=\"filePicker.click()\"\r\n        >\r\n          <mat-icon>&nbsp;add_a_photo</mat-icon>\r\n          <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      class=\"image-preview\"\r\n      *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\"\r\n    >\r\n      <img [src]=\"imagePreview\" [alt]=\"form.value.title\" />\r\n    </div>\r\n\r\n    <br />\r\n    <mat-form-field>\r\n      <textarea\r\n        matInput\r\n        rows=\"4\"\r\n        formControlName=\"content\"\r\n        placeholder=\"Post Content\"\r\n      >\r\n      </textarea>\r\n      <mat-error *ngIf=\"form.get('content').invalid\"\r\n        >Please add a post content</mat-error\r\n      >\r\n    </mat-form-field>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    <div>\r\n      <button mat-raised-button color=\"accent\" type=\"submit\">Publish</button>\r\n    </div>\r\n  </form>\r\n</mat-card>\r\n","import { AbstractControl } from \"@angular/forms\";\r\nimport { Observable, Observer, of } from \"rxjs\";\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  if (typeof(control.value) === 'string') {\r\n    return of(null);\r\n  }\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = Observable.create(\r\n    (observer: Observer<{ [key: string]: any }>) => {\r\n      fileReader.addEventListener(\"loadend\", () => {\r\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\r\n        let header = \"\";\r\n        let isValid = false;\r\n        for (let i = 0; i < arr.length; i++) {\r\n          header += arr[i].toString(16);\r\n        }\r\n        switch (header) {\r\n          case \"89504e47\":\r\n            isValid = true;\r\n            break;\r\n          case \"ffd8ffe0\":\r\n          case \"ffd8ffe1\":\r\n          case \"ffd8ffe2\":\r\n          case \"ffd8ffe3\":\r\n          case \"ffd8ffe8\":\r\n            isValid = true;\r\n            break;\r\n          default:\r\n            isValid = false; \r\n            break;\r\n        }\r\n        if (isValid) {\r\n          observer.next(null);\r\n        } else {\r\n          observer.next({ invalidMimeType: true });\r\n        }\r\n        observer.complete();\r\n      });\r\n      fileReader.readAsArrayBuffer(file);\r\n    }\r\n  );\r\n  return frObs;\r\n};\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { Post } from '../post.model';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { PostsService } from '../post.service';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-edi',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.css'],\r\n})\r\nexport class EditComponent implements OnInit {\r\n  constructor(\r\n    public postsService: PostsService,\r\n    public route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n  isLoggedIn = this.authService.isLoggedIn();\r\n  private mode = 'create';\r\n  private postId: string;\r\n  isLoading = false;\r\n  form: FormGroup;\r\n  post: Post;\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      content: new FormControl(null, { validators: [Validators.required] }),\r\n    });\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      if (paramMap.has('postId')) {\r\n        this.mode = 'edit';\r\n        this.postId = paramMap.get('postId');\r\n        this.isLoading = true;\r\n        this.postsService.getPost(this.postId).subscribe((postData) => {\r\n          this.isLoading = false;\r\n          this.post = {\r\n            id: postData._id,\r\n            userId: postData.userId,\r\n            username: postData.username,\r\n            content: postData.content,\r\n            likesCount: postData.likesCount,\r\n            liked: postData.liked,\r\n            comments: postData.comments,\r\n            imagePath: null,\r\n          };\r\n          this.form.setValue({\r\n            content: this.post.content,\r\n          });\r\n        });\r\n      } else {\r\n        this.mode = 'create';\r\n        this.postId = null;\r\n      }\r\n    });\r\n  }\r\n  enteredContent = '';\r\n\r\n  onSavePost() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    if (this.mode === 'create') {\r\n      this.postsService.addPost(this.form.value.content, this.form.value.image);\r\n    } else {\r\n      this.postsService.updatePost(this.postId, this.form.value.content);\r\n    }\r\n    this.form.reset();\r\n  }\r\n\r\n  goToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","<div *ngIf=\"!isLoggedIn ? goToLogin() : false\"></div>\r\n<mat-card>\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n  <form [formGroup]=\"form\" (submit)=\"onSavePost()\" *ngIf=\"!isLoading\">\r\n    <div\r\n      class=\"image-preview\"\r\n      *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\"\r\n    >\r\n      <img [src]=\"imagePreview\" [alt]=\"form.value.title\" />\r\n    </div>\r\n\r\n    <br />\r\n    <mat-form-field>\r\n      <textarea\r\n        matInput\r\n        rows=\"4\"\r\n        formControlName=\"content\"\r\n        placeholder=\"Post Content\"\r\n      >\r\n      </textarea>\r\n      <mat-error *ngIf=\"form.get('content').invalid\"\r\n        >Please add a post content</mat-error\r\n      >\r\n    </mat-form-field>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    <div>\r\n      <button mat-raised-button color=\"accent\" type=\"submit\">Publish</button>\r\n    </div>\r\n  </form>\r\n</mat-card>\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { Post } from '../post.model';\r\nimport { Comment } from '../comment.model';\r\nimport { PostsService } from '../post.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-post-list',\r\n  templateUrl: './post-list.component.html',\r\n  styleUrls: ['./post-list.component.css'],\r\n})\r\nexport class PostListComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    public postsService: PostsService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n  isLoading = false;\r\n  isLoggedIn = this.authService.isLoggedIn();\r\n  username = this.authService.getUsername();\r\n  public userId = this.authService.getUserId();\r\n  posts: Post[] = [];\r\n  private postsSub: Subscription;\r\n  ngOnInit(): void {\r\n    this.isLoading = true;\r\n    this.postsService.getPosts();\r\n    this.postsSub = this.postsService\r\n      .getPostUpdateListener()\r\n      .subscribe((posts: Post[]) => {\r\n        this.posts = posts;\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n  onDelete(postId: string) {\r\n    this.postsService.deletePost(postId);\r\n  }\r\n\r\n  onLike(postId, userId) {\r\n    this.postsService.onLike(postId, userId, this.callbackF, this);\r\n  }\r\n\r\n  myFunc(newComment: HTMLInputElement, postId) {\r\n    if (newComment.value == '') return;\r\n    console.log(this.posts);\r\n    this.postsService.addComment(\r\n      newComment.value,\r\n      postId,\r\n      this.callbackF2,\r\n      this\r\n    );\r\n    newComment.value = '';\r\n  }\r\n\r\n  callbackF2(json: any, ovo) {\r\n    console.log(json);\r\n    for (let i = 0; i < ovo.posts.length; i++) {\r\n      if (ovo.posts[i].id === json.postId) {\r\n        let com: Comment = {\r\n          id: json.postId,\r\n          username: json.username,\r\n          text: json.text,\r\n        };\r\n        //console.log( ovo.posts[i].comments);\r\n        ovo.posts[i].comments.comms.push(com);\r\n      }\r\n    }\r\n  }\r\n\r\n  callbackF(responseData: any, ovo) {\r\n    for (let i = 0; i < ovo.posts.length; i++) {\r\n      if (ovo.posts[i].id === responseData.postId) {\r\n        if (ovo.posts[i].likesCount < responseData.newLikeCount) {\r\n          ovo.posts[i].liked.push(ovo.userId);\r\n        } else {\r\n          const index = ovo.posts[i].liked.indexOf(ovo.userId);\r\n          if (index > -1) {\r\n            ovo.posts[i].liked.splice(index, 1);\r\n          }\r\n        }\r\n        ovo.posts[i].likesCount = responseData.newLikeCount;\r\n      }\r\n    }\r\n    console.log(ovo.posts);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.postsSub.unsubscribe();\r\n  }\r\n\r\n  goToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","<div *ngIf=\"!isLoggedIn ? goToLogin() : false\"></div>\r\n<div class=\"grid\">\r\n  <mat-card class=\"example-card\" *ngFor=\"let post of posts\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar class=\"example-header-image\"></div>\r\n\r\n      <mat-card-title>{{ post.username }}</mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <br />\r\n\r\n    <div class=\"post-image\">\r\n      <img mat-card-image [src]=\"post.imagePath\" [alt]=\"username\" />\r\n    </div>\r\n    <mat-card-content>\r\n      {{ post.content }}\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <div class=\"example-button-container\">\r\n        <button\r\n          [matBadge]=\"post.likesCount\"\r\n          matBadgePosition=\"before\"\r\n          matBadgeColor=\"primary\"\r\n          mat-fab\r\n          [color]=\"post.liked.includes(userId) ? 'accent' : 'disabled'\"\r\n          (click)=\"onLike(post.id, userId)\"\r\n        >\r\n          <mat-icon>favorite</mat-icon>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-accent\"\r\n          (click)=\"post.comments.isCollapsed = !post.comments.isCollapsed\"\r\n          [attr.aria-expanded]=\"!post.comments.isCollapsed\"\r\n          aria-controls=\"collapseExample\"\r\n          mat-fab\r\n          color=\"disabled\"\r\n          aria-label=\"Example icon button with a bookmark icon\"\r\n        >\r\n          <mat-icon>comment</mat-icon>\r\n        </button>\r\n\r\n        <div class=\"comments\">\r\n          <div *ngIf=\"!post.comments.isCollapsed\" class=\"comments\">\r\n            <mat-form-field>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              placeholder=\"Post Comment\"\r\n              #commentInput\r\n            />\r\n          </mat-form-field>\r\n            <button\r\n            mat-mini-fab\r\n              color=\"primary\"\r\n              (click)=\"myFunc(commentInput, post.id)\"\r\n              aria-label=\"Example icon button with a home icon\"\r\n            >\r\n              <mat-icon>add</mat-icon>\r\n            </button>\r\n            <div class=\"grid\">\r\n              <mat-card\r\n                class=\"comment-card\"\r\n                *ngFor=\"let x of post.comments.comms\"\r\n              >\r\n                <mat-card-header style=\"margin-bottom: 5px;\">\r\n                  <mat-card-title style=\"color: #000000; font-size: 18px;\">{{\r\n                    x.username\r\n                  }}:</mat-card-title>\r\n                  <mat-card-content>\r\n                    <p id=\"neki\">\r\n                      {{ x.text }}\r\n                    </p>\r\n                  </mat-card-content>\r\n                </mat-card-header>\r\n               \r\n              </mat-card>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n<div class=\"info\">\r\n  <p *ngIf=\"posts.length <= 0 && !isLoading\">Please add some images</p>\r\n</div>\r\n","import { Post } from './post.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MAT_RIPPLE_GLOBAL_OPTIONS } from '@angular/material/core';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PostsService {\r\n  private posts: Post[] = [];\r\n  private postsUpdated = new Subject<Post[]>();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  public username = this.authService.getUsername();\r\n  public userId = this.authService.getUserId();\r\n\r\n  getPostsFromUser(id: string) {\r\n    console.log('http://localhost:3000/api/posts/user/' + id);\r\n    this.http\r\n      .get<{ message: string; posts: any }>(\r\n        'http://localhost:3000/api/posts/user/' + id\r\n      )\r\n      .pipe(\r\n        map((postData) => {\r\n          return postData.posts.map((post) => {\r\n            console.log(post);\r\n            return {\r\n              _userId: post._userId,\r\n              content: post.content,\r\n              username: post.username,\r\n              id: post._id,\r\n              likesCount: post.likesCount,\r\n              liked: post.liked,\r\n              comments: { comms: post.comments, isCollapsed: true },\r\n              imagePath: post.imagePath,\r\n            };\r\n          });\r\n        })\r\n      )\r\n      .subscribe((transformedPosts) => {\r\n        this.posts = transformedPosts.reverse();\r\n        this.postsUpdated.next([...this.posts]);\r\n      });\r\n  }\r\n\r\n  addComment(newComment, postId, callbackF, ovo): any {\r\n    const postData = {\r\n      postId: postId,\r\n      username: this.authService.getUsername(),\r\n      text: newComment,\r\n    };\r\n    return this.http\r\n      .post('http://localhost:3000/api/posts/addComment', postData)\r\n      .subscribe((responseData: any) => {\r\n        callbackF(responseData, ovo);\r\n      });\r\n  }\r\n\r\n  getPosts() {\r\n    this.http\r\n      .get<{ message: string; posts: any }>('http://localhost:3000/api/posts')\r\n      .pipe(\r\n        map((postData) => {\r\n          return postData.posts.map((post) => {\r\n            console.log(post.comments);\r\n            return {\r\n              userId: post._userId,\r\n              content: post.content,\r\n              username: post.username,\r\n              id: post._id,\r\n              likesCount: post.likesCount,\r\n              liked: post.liked,\r\n              comments: { comms: post.comments, isCollapsed: true },\r\n              imagePath: post.imagePath,\r\n            };\r\n          });\r\n        })\r\n      )\r\n      .subscribe((transformedPosts) => {\r\n        this.posts = transformedPosts.reverse();\r\n        this.postsUpdated.next([...this.posts]);\r\n      });\r\n  }\r\n\r\n  getPostUpdateListener() {\r\n    return this.postsUpdated.asObservable();\r\n  }\r\n\r\n  updatePost(id: string, content: string) {\r\n    const post = {\r\n      id: id,\r\n      content: content,\r\n      imagePath: null,\r\n    };\r\n    this.http\r\n      .put('http://localhost:3000/api/posts/' + id, post)\r\n      .subscribe((response) => {\r\n        const updatedPosts = [...this.posts];\r\n        const oldPostIndex = updatedPosts.findIndex((p) => p.id === post.id);\r\n\r\n        updatedPosts[oldPostIndex].content = post.content;\r\n        this.posts = updatedPosts;\r\n        this.postsUpdated.next([...this.posts]);\r\n        this.router.navigate(['/'], { relativeTo: this.route });\r\n      });\r\n  }\r\n\r\n  addPost(content: string, image: File) {\r\n    const postData = new FormData();\r\n\r\n    postData.append('content', content);\r\n    postData.append('username', this.authService.getUsername());\r\n    postData.append('image', image);\r\n    postData.append('_userId', this.authService.getUserId());\r\n\r\n    this.http\r\n      .post<{ message: string; post: Post }>(\r\n        'http://localhost:3000/api/posts',\r\n        postData\r\n      )\r\n      .subscribe((responseData) => {\r\n        const post: Post = {\r\n          id: responseData.post.id,\r\n          userId: this.authService.getUserId(),\r\n          username: this.authService.getUsername(),\r\n          content: content,\r\n          likesCount: 0,\r\n          liked: [],\r\n          comments: { comms: [], isCollapsed: true },\r\n          imagePath: responseData.post.imagePath,\r\n        };\r\n        this.posts.push(post);\r\n        this.postsUpdated.next([...this.posts]);\r\n        this.router.navigate(['/']);\r\n      });\r\n  }\r\n\r\n  getPost(id: string) {\r\n    return this.http.get<{\r\n      _id: string;\r\n      userId: string;\r\n      username: string;\r\n      title: string;\r\n      content: string;\r\n      likesCount: Number;\r\n      liked: [];\r\n      comments: { comms: []; isCollapsed: boolean };\r\n    }>('http://localhost:3000/api/posts/' + id);\r\n  }\r\n\r\n  deletePost(postId: string) {\r\n    this.http\r\n      .delete('http://localhost:3000/api/posts/' + postId)\r\n      .subscribe(() => {\r\n        const updatedPosts = this.posts.filter((post) => post.id !== postId);\r\n        this.posts = updatedPosts;\r\n        this.postsUpdated.next([...this.posts]);\r\n      });\r\n  }\r\n\r\n  onLike(postId, userId, funkcija, ovo) {\r\n    const postData = {\r\n      postId: postId,\r\n      userId: userId,\r\n    };\r\n    this.http\r\n      .post('http://localhost:3000/api/posts/like', postData)\r\n      .subscribe((responseData: any) => {\r\n        funkcija(responseData, ovo);\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError, empty, Subject } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\nimport { catchError, tap, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WebReqInterceptorService implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  refreshingAccessToken: boolean;\r\n\r\n  accessTokenRefreshed: Subject<any> = new Subject();\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<any> {\r\n    // Handle the request\r\n    request = this.addAuthHeader(request);\r\n\r\n    // call next() and handle the response\r\n    return next.handle(request).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        console.log(error);\r\n\r\n        if (error.status === 401) {\r\n          // 401 error so we are unauthorized\r\n\r\n          // refresh the access token\r\n          return this.refreshAccessToken().pipe(\r\n            switchMap(() => {\r\n              request = this.addAuthHeader(request);\r\n              return next.handle(request);\r\n            }),\r\n            catchError((err: any) => {\r\n              console.log(err);\r\n              this.authService.logout();\r\n              return empty();\r\n            })\r\n          );\r\n        }\r\n\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  refreshAccessToken() {\r\n    if (this.refreshingAccessToken) {\r\n      return new Observable((observer) => {\r\n        this.accessTokenRefreshed.subscribe(() => {\r\n          // this code will run when the access token has been refreshed\r\n          observer.next();\r\n          observer.complete();\r\n        });\r\n      });\r\n    } else {\r\n      this.refreshingAccessToken = true;\r\n      // we want to call a method in the auth service to send a request to refresh the access token\r\n      return this.authService.getNewAccessToken().pipe(\r\n        tap(() => {\r\n          console.log('Access Token Refreshed!');\r\n          this.refreshingAccessToken = false;\r\n          this.accessTokenRefreshed.next();\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  addAuthHeader(request: HttpRequest<any>) {\r\n    // get the access token\r\n    const token = this.authService.getAccessToken();\r\n\r\n    if (token) {\r\n      // append the access token to the request header\r\n      return request.clone({\r\n        setHeaders: {\r\n          'x-access-token': token,\r\n        },\r\n      });\r\n    }\r\n    return request;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WebRequestService {\r\n  readonly ROOT_URL;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.ROOT_URL = 'http://localhost:3000';\r\n  }\r\n\r\n  get(uri: string) {\r\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\r\n  }\r\n\r\n  post(uri: string, payload: Object) {\r\n    const res = this.http.post(`${this.ROOT_URL}/${uri}`, payload);\r\n    console.log(res);\r\n    return res; //this.http.post(`${this.ROOT_URL}/${uri}`, payload);\r\n  }\r\n\r\n  patch(uri: string, payload: Object) {\r\n    return this.http.patch(`${this.ROOT_URL}/${uri}`, payload);\r\n  }\r\n\r\n  delete(uri: string) {\r\n    return this.http.delete(`${this.ROOT_URL}/${uri}`);\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    return this.http.post(\r\n      `${this.ROOT_URL}/api/users/login`,\r\n      {\r\n        email,\r\n        password,\r\n      },\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  signup(email: string, password: string, username: string) {\r\n    return this.http.post(\r\n      `${this.ROOT_URL}/api/users`,\r\n      {\r\n        email,\r\n        password,\r\n        username,\r\n      },\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}